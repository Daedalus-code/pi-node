#!/bin/bash

# By Rainman
# V20212312
# 0.0.6.6

source /home/pi/pitrump.conf
source /usr/local/bin/include/color

# dependencies

# make sure screen is installed
if ! [ -x "$(command -v screen)" ] &>/dev/null; then
  sudo apt-get install screen -y
fi
# make sure tor is installed
if ! [ -x "$(command -v tor)" ] &>/dev/null; then
  sudo apt-get install tor -y
  echo "Setup tor/wallet configurations!"
fi

# update repo
cd /home/"$(whoami)"/trump-node || exit
CHANGED=0
git remote update && git status -uno | grep -q 'Your branch is behind' && CHANGED=1
if [ $CHANGED = 1 ]; then
  clear
  # fetch date, time and head commit
  REPO_HEAD_OLD=$(git rev-parse --short HEAD 2>&1 | grep -Eo '[a0-z9]{7}' 2>&1 | head -1 2>&1)
  # save values, make it old next round
  echo "$REPO_HEAD_OLD" >"${LOG_DIR:?}"/node_data/repo/head.old 2>&1
  # install/update
  mkdir "${LOG_DIR:?}"/node_data &>/dev/null
  mkdir "${LOG_DIR:?}"/node_data/repo &>/dev/null
  sudo cp -R /home/"$(whoami)"/trump-node/include/* /usr/local/bin/include/ 2>&1
  sudo cp -R /home/"$(whoami)"/trump-node/pitrump /usr/local/bin/ 2>&1
  sudo cp -R /home/"$(whoami)"/trump-node/include/update /usr/local/bin/ 2>&1
  sudo chmod +x /usr/local/bin/update
  sudo chown -R "$(whoami)":"$(whoami)" /usr/local/bin/pitrump /usr/local/bin/update /usr/local/bin/include /usr/local/bin/include/* 2>&1
  sudo chown "$(whoami)":"$(whoami)" "${LOG_DIR:?}"/node_data 2>&1
  # update repo
  cd /home/"$(whoami)"/trump-node || exit
  # fetch date, time and head commit
  git rev-parse --short HEAD 2>&1 | grep -Eo '[a0-z9]{7}' 2>&1 | head -1 >"${LOG_DIR:?}"/node_data/repo/head.new 2>&1
  REPO_HEAD=$(cat "${LOG_DIR:?}"/node_data/repo/head.new 2>/dev/null)
  REPO_HEAD_OLD=$(cat "${LOG_DIR:?}"/node_data/repo/head.old 2>/dev/null)
  printf '%b' "Upgrade! [${G1:?}Ok${N0:?}] [${G0:?}${REPO_HEAD_OLD:?}${N0:?}] -> [${P1:?}${REPO_HEAD:?}${N0:?}]${N0:?}\n"
  ls -lS /usr/local/bin/include/
else
  clear
  # fetch date, time and head commit
  REPO_HEAD_OLD=$(git rev-parse --short HEAD 2>&1 | grep -Eo '[a0-z9]{7}' 2>&1 | head -1 2>&1)
  # save values, make it old next round
  echo "$REPO_HEAD_OLD" >"${LOG_DIR:?}"/node_data/repo/head.old 2>&1
  # fetch old date, time and head commit
  REPO_HEAD=$(cat "${LOG_DIR:?}"/node_data/repo/head.new 2>/dev/null)
  if [[ -z "$REPO_HEAD" ]]; then
    # non responsive
    REPO_HEAD="${GR:?}000000${N0:?}"
  fi
  REPO_HEAD_OLD=$(cat "${LOG_DIR:?}"/node_data/repo/head.old 2>/dev/null)
  printf '%b' "Updated! [${G1:?}Ok${N0:?}] [${G0:?}${REPO_HEAD_OLD:?}${N0:?}] -> [${P1:?}${REPO_HEAD:?}${N0:?}]${N0:?}\n"
  ls -lS /usr/local/bin/include/
fi

# END
