#!/bin/bash

# By Rainman
# V20220801
# 0.0.9.2

source /home/pi/pitrump.conf
source /usr/local/bin/include/color

# date for logs
LOG_DATE=$(date '+%Y-%m-%dT%TZ' 2>&1)

# dependencies

# make sure screen is installed
if ! [ -x "$(command -v screen)" ] &>/dev/null; then
  sudo apt-get install screen -y
fi

# make sure tor is installed
if ! [ -x "$(command -v tor)" ] &>/dev/null; then
  read -r -p "[YN] Install Proxy (tor)? y/n " -n 1 -r
  echo
  if [[ $REPLY =~ ^[Yy]$ ]] &>/dev/null; then
    sudo apt-get install tor -y
    echo "Setup tor/wallet configurations!"
    # tor group, user configuration
    TORGROUP=$(stat -c '%G' /run/tor/control.authcookie 2>&1)
    sudo usermod -a -G "${TORGROUP:?}" "$(whoami)" 2>&1
    # check torrc configuration
    if ! grep "15110 127.0.0.1:15110" /etc/tor/torrc &>/dev/null; then
      cat >/tmp/torrc <<'EOF'
RunAsDaemon 1

ControlPort 9051
CookieAuthentication 1
CookieAuthFileGroupReadable 1

HiddenServiceDir /var/lib/tor/trumpcoin-service/
HiddenServicePort 15110 127.0.0.1:15110
EOF
      cat /tmp/torrc 2>/dev/null | sudo tee -a /etc/tor/torrc 2>&1
      # remove old files
      rm /tmp/torrc &>/dev/null
      # restart tor after configuration
      sudo service tor restart 2>&1
    fi
  fi
fi

# make sure grepcidr is installed
if ! [ -x "$(command -v grepcidr)" ] &>/dev/null; then
  sudo apt-get install grepcidr -y
  echo "Setup tor/wallet configurations!"
fi

clear

# look for screen session, if found, killall
if screen -list 2>&1 |
  grep -q "add_peers" &>/dev/null; then
  killall screen &>/dev/null
fi

# install/update
if [ ! -d "${LOG_DIR:?}"/node_data ] &>/dev/null; then
  mkdir "${LOG_DIR:?}"/node_data &>/dev/null
fi
if [ ! -d /usr/local/bin/include ] &>/dev/null; then
  sudo mkdir /usr/local/bin/include &>/dev/null
fi
sudo cp -R /home/"$(whoami)"/trump-node/include/* /usr/local/bin/include/ 2>&1
sudo cp -R /home/"$(whoami)"/trump-node/pitrump /usr/local/bin/ 2>&1
sudo cp -R /home/"$(whoami)"/trump-node/include/update /usr/local/bin/ 2>&1
sudo cp -R /home/"$(whoami)"/trump-node/include/menu /usr/local/bin/ 2>&1
sudo chmod +x /usr/local/bin/update 2>&1
sudo chmod +x /usr/local/bin/menu 2>&1
rm "${LOG_DIR:?}"/add_peers &>/dev/null
sudo chown -R "$(whoami)":"$(whoami)" /usr/local/bin/pitrump /usr/local/bin/update /usr/local/bin/include /usr/local/bin/include/* 2>&1
sudo chown -R "$(whoami)":"$(whoami)" "${LOG_DIR:?}"/node_data 2>&1
LATEST_DATE=$(cd /home/"$(whoami)"/trump-node || exit && git log -1 --format="%at" | xargs -I{} date -d @{} '+%Y/%m/%d %H:%M:%S')
LATEST_HEAD=$(cd /home/"$(whoami)"/trump-node || exit && git rev-parse --short HEAD 2>&1 | grep -Eo '[a0-z9]{7}' 2>&1 | head -1 2>&1)
OLD_HEAD=$(grep "Update.Script" "${WALLET_LOG_DIR:?}"/debug.log 2>&1 | awk '{ print $7 }' 2>&1 | tail -1 2>&1 | sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2})?)?[mGK]//g" 2>&1)
if [[ -z "$OLD_HEAD" ]] &>/dev/null; then
  # non responsive
  OLD_HEAD="${GR:?}[fsociety]${N0:?}"
fi
printf '%b' "Updating! ${GR:?}${OLD_HEAD:?}${N0:?} -> [${G1:?}$LATEST_HEAD${N0:?}] ${GR:?}$LATEST_DATE${N0:?}\n"
printf '%b' "${LOG_DATE:?} Status() Update.Script: Updating! ${GR:?}${OLD_HEAD:?}${N0:?} -> [${G1:?}$LATEST_HEAD${N0:?}] $LATEST_DATE${N0:?}\n" >>"${WALLET_LOG_DIR:?}"/debug.log 2>&1
ls -lSh /usr/local/bin/include/

# END
