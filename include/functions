#!/bin/bash

# By Rainman
# V20210812
# 0.1.2.0

# shellcheck disable=SC2034  # Unused variables left for readability

source /home/pi/pitrump.conf

# create data directory
mkdir /home/"$(whoami)"/node_data &>/dev/null

### system information #########################################################

# log lines (tail debug)
LAST_LOG=$(tail -n 1 "$WALLET_DIR"/debug.log 2>&1)
LAST_LOG=$(echo "${LAST_LOG:0:188} $SIZE")

# time - date, trim extra spaces with xargs
CLOCK=$(date "+%H:%M:%S" 2>&1)

# system load
LOAD=$(uptime 2>&1 | grep -Eo "[0-9]+.[0-9]+, [0-9]+.[0-9]+, [0-9]+.[0-9]+" 2>&1)

# cpu temp, celcius, fahrenheit, (raspberry pi)
CPU_CTEMP=$(</sys/class/thermal/thermal_zone0/temp)
CPU_CTEMP=$(echo "$CPU_CTEMP / 100 * 0.1" 2>&1 |
  bc 2>&1 | awk '{ printf "%.0f\n", $1 }' 2>&1)
CPU_FTEMP=$(echo "(1.8 * $CPU_CTEMP) + 32" 2>&1 |
  bc 2>&1 | awk '{ printf "%.0f\n", $1 }' 2>&1)

# free Memory
FREE_MEM=$(free --mega 2>&1 | grep "Mem" 2>&1 |
  awk '{ print $4 }' 2>&1)
# total Memory
TOTAL_MEM=$(free --mega 2>&1 | grep "Mem" 2>&1 |
  awk '{ print $2 }' 2>&1)

# free Space, mmc block device #0, partition #2, partition #2, dev/root
USED_HDD=$(df -h 2>&1 | grep -E "mmcblk0p2|mmcblk0p3|/dev/root" 2>&1 |
  awk '{ print $3 }' 2>&1)
USED_HDD_P=$(df -h | grep -E "mmcblk0p2|mmcblk0p3|/dev/root" 2>&1 |
  awk '{ print $5 }' 2>&1)

# get interface
IFCONFIG=$(ifconfig 2>&1 | grep -E "wlan*|eth*" 2>&1)
IP_ADDRESS=$(echo "$IFCONFIG" 2>&1 | grep -E "inet " 2>&1 |
  grep -vwE "127.0.0.1" 2>&1 | awk '{ print $2 }' 2>&1)
INTERFACE=$(echo "$IFCONFIG" 2>&1 | grep -E "wlan*|eth*" 2>&1 |
  awk '{ print $1 }' 2>&1 | awk -F: '{ print $1 }' 2>&1 |
  head -1 2>&1)

# update wan (every day)
if [[ "$(date +%H%M 2>&1 | grep -Eo "2359" 2>&1)" ]]; then
  rm "$LOG_DIR"/getwan &>/dev/null
fi
# get wan
if [[ ! -f "$LOG_DIR"/getwan ]]; then
  host myip.opendns.com resolver1.opendns.com >"$LOG_DIR"/getwan
fi
PUBLIC_IP=$(cat "$LOG_DIR"/getwan 2>&1 | grep "address" 2>&1 |
  egrep -o "[0-9]+.[0-9]+.[0-9]+.[0-9]+" 2>&1)

# download
DOWNLOAD=$(ifconfig 2>&1 | grep -E "wla*|eth*" 2>&1 |
  grep "RX packets" 2>&1 | head -1 2>&1 |
  awk '{ print $6 $7 }' 2>&1 | tr -d '()' 2>&1)
# upload
UPLOAD=$(ifconfig 2>&1 | grep -E "wla*|eth*" 2>&1 |
  grep "TX packets" 2>&1 | head -1 2>&1 |
  awk '{ print $6 $7 }' 2>&1 | tr -d '()' 2>&1)

### wallet information #########################################################

# collect wallet info, on every update (loop)
"$WALLET_DIR"/trumpcoin-cli -datadir=./ -conf="$WALLET_DIR"/trumpcoin.conf getinfo >"$LOG_DIR"/getinfo
"$WALLET_DIR"/trumpcoin-cli -datadir=./ -conf="$WALLET_DIR"/trumpcoin.conf getnetworkinfo >"$LOG_DIR"/getnetworkinfo
"$WALLET_DIR"/trumpcoin-cli -datadir=./ -conf="$WALLET_DIR"/trumpcoin.conf getblockchaininfo >"$LOG_DIR"/getblockchaininfo

WALLET_VERSION=$(cat "$LOG_DIR"/getnetworkinfo 2>&1 |
  grep "Core" 2>&1 | egrep -o "[0-9]+.[0-9]+.[0-9]+" 2>&1)
if ! "$(cat "$LOG_DIR"/getblockchaininfo 2>&1 | grep "main" 2>&1)" -eq "main" &>/dev/null; then
  # mainnet
  WALLET_CHAIN="mainnet"
else
  # testnet
  WALLET_CHAIN="testnet"
fi
HEADS=$(cat "$LOG_DIR"/getblockchaininfo 2>&1 | grep "blocks" 2>&1 | grep -Eo "[0-9]+" 2>&1)
BLOCK=$(cat "$LOG_DIR"/getblockchaininfo 2>&1 | grep "headers" 2>&1 | grep -Eo "[0-9]+" 2>&1)
WALLET_CALC=$(echo "100/$HEADS*$BLOCK" 2>&1 | bc -l 2>&1 | awk '{ printf "%.2f\n", $1 }' 2>&1)
if [[ "$(echo "$WALLET_CALC" 2>&1 | tr -d '.' 2>&1)" -eq "9999" ]] &>/dev/null; then
  # 100% synced
  WALLET_SYNC="100"
else
  WALLET_SYNC=$(echo "100/$HEADS*$BLOCK" 2>&1 | bc -l 2>&1 | awk '{ printf "%.2f\n", $1 }' 2>&1)
fi
# wallet connections
GETCONNECTIONS=$(cat "$LOG_DIR"/getinfo 2>&1 | grep "connections" 2>&1 | egrep -o "[0-9]+" 2>&1)
# wallet balance
TOTAL_BALANCE=$(cat "$LOG_DIR"/getinfo 2>&1 | grep "balance" 2>&1 | egrep -o "[0-9]+.[0-9]+" 2>&1)

if [[ -z "$WALLET_VERSION" ]]; then
  WALLET_VERSION="${GR:?}0.0.0${N0:?}"
fi
if [[ -z "$WALLET_CHAIN" ]]; then
  WALLET_CHAIN="${GR:?}0${N0:?}"
fi
if [[ -z "$WALLET_SYNC" ]]; then
  WALLET_SYNC=""
fi
if [[ -z "$GETCONNECTIONS" ]]; then
  GETCONNECTIONS="${GR:?}0${N0:?}"
fi
if [[ -z "$TOTAL_BALANCE" ]]; then
  TOTAL_BALANCE="${GR:?}0.00000000${N0:?}"
fi

# END
