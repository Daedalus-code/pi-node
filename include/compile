################################################################################

source /etc/pi-node/include/color
source /etc/pi-node/config

################################################################################

# start counting (seconds)
START="$SECONDS"

################################################################################

# CPU architecture
CPU_ARCH="$(uname -m)"
# CPU cores
CPU_CORES="$(nproc)"
# whoami
WHOAMI="$(whoami)"

printf '%b' "[${G1}OK${N0}] Console : Detected ${CY}$CPU_ARCH${N0} with ${G1}$CPU_CORES${N0} cores. Using target: $HOST\n"

################################################################################

sudo apt update && sudo apt upgrade -y
sudo apt install -y \
  git build-essential libtool autotools-dev automake pkg-config \
  bsdmainutils curl libevent-dev libboost-system-dev \
  libboost-filesystem-dev libboost-chrono-dev libboost-test-dev \
  libboost-thread-dev libssl-dev libzmq3-dev libqrencode-dev \
  libminiupnpc-dev software-properties-common

################################################################################

# install rust and cargo silently with default options
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
source "$HOME"/.cargo/env

################################################################################
# patches for aarch64
################################################################################

# if aarch64
if [[ "$CPU_ARCH" == "aarch64" ]] &>/dev/null; then
  # patch missing <deque> include
  sed -i '/#include <event2\/keyvalq_struct.h>/a #include <deque>' "$HOME/FreedomCoin-Core/src/httpserver.cpp"
  # patch non-constexpr sysconf() usage in Catch2 test framework
  sed -i 's|static constexpr std::size_t sigStackSize = .*;|static const std::size_t sigStackSize = 32768;|' "$HOME/FreedomCoin-Core/src/contrib/catch/catch.hpp"
  # add missing include <memory> to chiabls/src/threshold.cpp
  sed -i '1s/^/#include <memory>\n/' "$HOME/FreedomCoin-Core/src/chiabls/src/threshold.cpp"
  # remove bad alignment on blake2s_state and blake2b_state in array declarations
  sed -i 's/__attribute__((aligned(32))) blake2s_state/blake2s_state/g' "$HOME/FreedomCoin-Core/src/chiabls/contrib/relic/src/md/blake2.h"
  sed -i 's/__attribute__((aligned(64))) blake2b_state/blake2b_state/g' "$HOME/FreedomCoin-Core/src/chiabls/contrib/relic/src/md/blake2.h"
  # also check and fix in .c files
  sed -i 's/__attribute__((aligned(32))) blake2s_state/blake2s_state/g' "$HOME/FreedomCoin-Core/src/chiabls/contrib/relic/src/md/blake2s-ref.c"
  sed -i 's|typedef struct blake2s_state {|typedef struct __attribute__((aligned(32))) blake2s_state {|' "$HOME/FreedomCoin-Core/src/chiabls/contrib/relic/src/md/blake2-impl.h"
  sed -i 's|typedef struct blake2b_state {|typedef struct __attribute__((aligned(64))) blake2b_state {|' "$HOME/FreedomCoin-Core/src/chiabls/contrib/relic/src/md/blake2-impl.h"
fi

################################################################################
# berkeleydb 4.8
################################################################################

cd ~
wget http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz
tar -xvzf db-4.8.30.NC.tar.gz
cd db-4.8.30.NC/build_unix
../dist/configure --prefix=/usr/local --enable-cxx
make -j$(nproc)
sudo make install

################################################################################

git clone https://github.com/FreedomCoin-Project/FreedomCoin-Core.git
cd FreedomCoin-Core
./autogen.sh
./configure \
  --with-incompatible-bdb \
  BDB_LIBS="-L/usr/local/lib -ldb_cxx-4.8" \
  BDB_CFLAGS="-I/usr/local/include"
make -j$(nproc)

################################################################################

# strip binaries to save space
strip src/freedomcoind src/freedomcoin-cli || true

################################################################################

# if found
if [[ -f "$HOME"/FreedomCoin-Core/src/freedomcoind && -f "$HOME"/FreedomCoin-Core/src/freedomcoin-cli ]] &>/dev/null; then
  printf '%b' "[${G1}OK${N0}] Console : Installing daemon and cli..\n"
  # copy wallet binaries
  sudo cp "$HOME"/FreedomCoin-Core/src/freedomcoind /usr/local/bin &>/dev/null
  sudo cp "$HOME"/FreedomCoin-Core/src/freedomcoin-cli /usr/local/bin &>/dev/null
fi

################################################################################

# calculate build time
DURATION=$(echo "$SECONDS-$START" | bc 2>/dev/null)
TIMER=$(printf '%dh:%dm:%ds\n' $(("$DURATION/3600")) $(("$DURATION%3600/60")) $(("$DURATION%60")))

################################################################################

echo
printf '%b' "[${N0}!!${N0}] Console : Build time: ${G1}$TIMER${N0}\n"
echo
read -r -p "[Ok] Press Enter to continue" </dev/tty
echo

# END
