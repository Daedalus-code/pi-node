#!/bin/bash

# By Rainman
# V20220301
# 0.2.3.7

source /home/pi/pitrump.conf
source /usr/local/bin/include/color

# date for logs
LOG_DATE=$(date '+%Y-%m-%dT%TZ' 2>&1)

# node_stats directory
mkdir /home/"$(whoami)"/stats &>/dev/null

### install needed packages ####################################################

# rrdtool setup (graphs, round robin database)
if ! [ -x "$(command -v rrdtool)" ]; then
  sudo mkdir /var/lib/rrd &>/dev/null
  sudo mkdir /var/www/html/rrdtool &>/dev/null
  sudo chown -R "$(whoami)":"$(whoami)" /var/lib/rrd
  sudo apt-get install librrds-perl rrdtool -y 2>&1
fi

# apache2 setup (webserver, php)
if ! [ -x "$(command -v apache2)" ]; then
  sudo apt-get install apache2 php libapache2-mod-php -y 2>&1
  sudo chown -R "$(whoami)":"$(whoami)" /var/www/html
  rm /var/www/html/index.html &>/dev/null
  printf '%b' "[${G1:?}OK${N0:?}] Restarting Apache\n"
  sudo systemctl restart apache2 2>&1
  LOCAL=$(ifconfig 2>&1 | grep "inet" 2>&1 | head -1 2>&1 |
    sed -En 's/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p' 2>&1)
  echo "[!!] Try your $LOCAL IP Address"
  echo
  read -r -p "Press Enter to continue" </dev/tty
  echo
fi

### create round robin databases for system (rrdtool) ##########################

# load 1
if [ ! -f "/home/$(whoami)/stats/load.rrd" ]; then
  printf '%b' "${LOG_DATE:?} Status() rrdtoolStats() Creating load.rrd! ${CY:?}<>${N0:?}\n" >>"${WALLET_LOG_DIR:?}"/debug.log 2>&1
  rrdtool create /home/"$(whoami)"/stats/load.rrd \
    --step=60 \
    DS:load:GAUGE:300:U:U \
    RRA:AVERAGE:0.5:1:315360
fi
# load 5
if [ ! -f "/home/$(whoami)/stats/load5.rrd" ]; then
  printf '%b' "${LOG_DATE:?} Status() rrdtoolStats() Creating load5.rrd! ${CY:?}<>${N0:?}\n" >>"${WALLET_LOG_DIR:?}"/debug.log 2>&1
  rrdtool create /home/"$(whoami)"/stats/load5.rrd \
    --step=60 \
    DS:load5:GAUGE:300:U:U \
    RRA:AVERAGE:0.5:1:315360
fi
# load 15
if [ ! -f "/home/$(whoami)/stats/load15.rrd" ]; then
  printf '%b' "${LOG_DATE:?} Status() rrdtoolStats() Creating load15.rrd! ${CY:?}<>${N0:?}\n" >>"${WALLET_LOG_DIR:?}"/debug.log 2>&1
  rrdtool create /home/"$(whoami)"/stats/load15.rrd \
    --step=60 \
    DS:load15:GAUGE:300:U:U \
    RRA:AVERAGE:0.5:1:315360
fi
# temp
if [ ! -f "/home/$(whoami)/stats/temp.rrd" ]; then
  printf '%b' "${LOG_DATE:?} Status() rrdtoolStats() Creating temp.rrd! ${CY:?}<>${N0:?}\n" >>"${WALLET_LOG_DIR:?}"/debug.log 2>&1
  rrdtool create /home/"$(whoami)"/stats/temp.rrd \
    --step=60 \
    DS:temp:GAUGE:300:U:U \
    RRA:AVERAGE:0.5:1:315360
fi
# memory available
if [ ! -f "/home/$(whoami)/stats/memory_total.rrd" ]; then
  printf '%b' "${LOG_DATE:?} Status() rrdtoolStats() Creating memory_total.rrd! ${CY:?}<>${N0:?}\n" >>"${WALLET_LOG_DIR:?}"/debug.log 2>&1
  rrdtool create /home/"$(whoami)"/stats/memory_total.rrd \
    --step=60 \
    DS:memory_total:GAUGE:300:U:U \
    RRA:AVERAGE:0.5:1:315360
fi
# memory free
if [ ! -f "/home/$(whoami)/stats/memory_free.rrd" ]; then
  printf '%b' "${LOG_DATE:?} Status() rrdtoolStats() Creating memory_free.rrd! ${CY:?}<>${N0:?}\n" >>"${WALLET_LOG_DIR:?}"/debug.log 2>&1
  rrdtool create /home/"$(whoami)"/stats/memory_free.rrd \
    --step=60 \
    DS:memory_free:GAUGE:300:U:U \
    RRA:AVERAGE:0.5:1:315360
fi
# hdd
if [ ! -f "/home/$(whoami)/stats/hdd.rrd" ]; then
  printf '%b' "${LOG_DATE:?} Status() rrdtoolStats() Creating hdd.rrd! ${CY:?}<>${N0:?}\n" >>"${WALLET_LOG_DIR:?}"/debug.log 2>&1
  rrdtool create /home/"$(whoami)"/stats/hdd.rrd \
    --step=60 \
    DS:hdd:GAUGE:300:U:U \
    RRA:AVERAGE:0.5:1:315360
fi
# download
if [ ! -f "/home/$(whoami)/stats/net_down.rrd" ]; then
  printf '%b' "${LOG_DATE:?} Status() rrdtoolStats() Creating net_down.rrd! ${CY:?}<>${N0:?}\n" >>"${WALLET_LOG_DIR:?}"/debug.log 2>&1
  rrdtool create /home/"$(whoami)"/stats/net_down.rrd \
    --step=60 \
    DS:net_down:GAUGE:300:U:U \
    RRA:AVERAGE:0.5:1:315360
fi
# upload
if [ ! -f "/home/$(whoami)/stats/net_up.rrd" ]; then
  printf '%b' "${LOG_DATE:?} Status() rrdtoolStats() Creating net_up.rrd! ${CY:?}<>${N0:?}\n" >>"${WALLET_LOG_DIR:?}"/debug.log 2>&1
  rrdtool create /home/"$(whoami)"/stats/net_up.rrd \
    --step=60 \
    DS:net_up:GAUGE:300:U:U \
    RRA:AVERAGE:0.5:1:315360
fi

### create round robin databases for wallet (rrdtool) ##########################

# balance
if [ ! -f "/home/$(whoami)/stats/balance.rrd" ]; then
  printf '%b' "${LOG_DATE:?} Status() rrdtoolStats() Creating balance.rrd! ${CY:?}<>${N0:?}\n" >>"${WALLET_LOG_DIR:?}"/debug.log 2>&1
  rrdtool create /home/"$(whoami)"/stats/balance.rrd \
    --step=60 \
    DS:balance:GAUGE:300:U:U \
    RRA:AVERAGE:0.5:1:315360
fi
# stakes
if [ ! -f "/home/$(whoami)/stats/stakes.rrd" ]; then
  printf '%b' "${LOG_DATE:?} Status() rrdtoolStats() Creating stakes.rrd! ${CY:?}<>${N0:?}\n" >>"${WALLET_LOG_DIR:?}"/debug.log 2>&1
  rrdtool create /home/"$(whoami)"/stats/stakes.rrd \
    --step=60 \
    DS:stakes:GAUGE:300:U:U \
    RRA:AVERAGE:0.5:1:315360
fi
# inputs
if [ ! -f "/home/$(whoami)/stats/inputs.rrd" ]; then
  printf '%b' "${LOG_DATE:?} Status() rrdtoolStats() Creating inputs.rrd! ${CY:?}<>${N0:?}\n" >>"${WALLET_LOG_DIR:?}"/debug.log 2>&1
  rrdtool create /home/"$(whoami)"/stats/inputs.rrd \
    --step=60 \
    DS:inputs:GAUGE:300:U:U \
    RRA:AVERAGE:0.5:1:315360
fi
# peers
if [ ! -f "/home/$(whoami)/stats/peers.rrd" ]; then
  printf '%b' "${LOG_DATE:?} Status() rrdtoolStats() Creating peers.rrd! ${CY:?}<>${N0:?}\n" >>"${WALLET_LOG_DIR:?}"/debug.log 2>&1
  rrdtool create /home/"$(whoami)"/stats/peers.rrd \
    --step=60 \
    DS:peers:GAUGE:300:U:U \
    RRA:AVERAGE:0.5:1:315360
fi
# difficulty
if [ ! -f "/home/$(whoami)/stats/difficulty.rrd" ]; then
  printf '%b' "${LOG_DATE:?} Status() rrdtoolStats() Creating difficulty.rrd! ${CY:?}<>${N0:?}\n" >>"${WALLET_LOG_DIR:?}"/debug.log 2>&1
  rrdtool create /home/"$(whoami)"/stats/difficulty.rrd \
    --step=60 \
    DS:difficulty:GAUGE:300:U:U \
    RRA:AVERAGE:0.5:1:315360
fi
# total confirmations
if [ ! -f "/home/$(whoami)/stats/total_tx.rrd" ]; then
  printf '%b' "${LOG_DATE:?} Status() rrdtoolStats() Creating total_tx.rrd! ${CY:?}<>${N0:?}\n" >>"${WALLET_LOG_DIR:?}"/debug.log 2>&1
  rrdtool create /home/"$(whoami)"/stats/total_tx.rrd \
    --step=60 \
    DS:total_tx:GAUGE:300:U:U \
    RRA:AVERAGE:0.5:1:315360
fi

### update rrdtool databases ###################################################

# wallet daemon uptime function
# function for waiting with stuff before a limit (seconds) is reached
function uptime_daemon() {
  PID="$(pidof trumpcoind 2>&1)"
  HZ=$(getconf CLK_TCK 2>&1)
  UPTIME_CMD=$(awk '{print $1}' </proc/uptime)
  STARTTIME=$(awk '{print $22}' </proc/"$PID"/stat)
  echo $(("${UPTIME_CMD%.*}" - "$STARTTIME" / "$HZ"))
}

# greater than n seconds, continue
if [[ "$(uptime_daemon)" -gt "300" ]] &>/dev/null; then

  rrdtool update /home/"$(whoami)"/stats/load.rrd N:"$(cat "${LOG_DIR:?}"/node_data/load 2>/dev/null | tr -d ',' 2>&1 | awk '{ print $1 }' 2>&1)"
  rrdtool update /home/"$(whoami)"/stats/load5.rrd N:"$(cat "${LOG_DIR:?}"/node_data/load 2>/dev/null | tr -d ',' 2>&1 | awk '{ print $2 }' 2>&1)"
  rrdtool update /home/"$(whoami)"/stats/load15.rrd N:"$(cat "${LOG_DIR:?}"/node_data/load 2>/dev/null | tr -d ',' 2>&1 | awk '{ print $3 }' 2>&1)"
  rrdtool update /home/"$(whoami)"/stats/temp.rrd N:"$(echo "$(</sys/class/thermal/thermal_zone0/temp) / 100 * 0.1" | bc)"
  rrdtool update /home/"$(whoami)"/stats/memory_total.rrd N:"$(cat "${LOG_DIR:?}"/node_data/stats.total_mem 2>/dev/null)"
  rrdtool update /home/"$(whoami)"/stats/memory_free.rrd N:"$(cat "${LOG_DIR:?}"/node_data/stats.free_mem 2>/dev/null)"
  rrdtool update /home/"$(whoami)"/stats/hdd.rrd N:"$(echo "$(df 2>&1 | egrep "mmcblk0p2|mmcblk0p3|/dev/root" 2>&1 | awk '{ print $3 }' 2>&1)*1024" 2>&1 | bc -l 2>&1)"
  rrdtool update /home/"$(whoami)"/stats/net_down.rrd N:"$(egrep -o "[0-9]+.[0-9]+" "${LOG_DIR:?}"/node_data/stats.download 2>&1)"
  rrdtool update /home/"$(whoami)"/stats/net_up.rrd N:"$(egrep -o "[0-9]+.[0-9]+" "${LOG_DIR:?}"/node_data/stats.upload 2>&1)"
  rrdtool update /home/"$(whoami)"/stats/balance.rrd N:"$(grep "balance" "${LOG_DIR:?}"/node_data/getinfo 2>&1 | egrep -o "[0-9]+.[0-9]+" 2>&1 | awk '{ printf "%.2f\n", $1 }' 2>&1)"
  rrdtool update /home/"$(whoami)"/stats/stakes.rrd N:"$(grep -c "BitcoinMiner" "${WALLET_DIR:?}"/staking 2>&1)"
  rrdtool update /home/"$(whoami)"/stats/inputs.rrd N:"$(grep "address" "${LOG_DIR:?}"/node_data/listunspent 2>&1 | wc -l 2>&1)"
  rrdtool update /home/"$(whoami)"/stats/peers.rrd N:"$(grep "connections" "${LOG_DIR:?}"/node_data/getinfo 2>&1 | awk '{ print $2 }' 2>&1)"
  rrdtool update /home/"$(whoami)"/stats/difficulty.rrd N:"$(grep "difficulty" "${LOG_DIR:?}"/node_data/getinfo 2>&1 | awk '{ print $2 }' 2>&1)"
  rrdtool update /home/"$(whoami)"/stats/total_tx.rrd N:"$(echo "$(grep "confirmations" "${LOG_DIR:?}"/node_data/listunspent 2>&1 | awk '{ print $2 }' 2>&1 | awk '{ SUM += $1} END { print SUM }' 2>&1)/$(grep "address" "${LOG_DIR:?}"/node_data/listunspent 2>&1 | wc -l 2>&1)" 2>&1 | bc 2>&1)"

fi

#### create index.php ##########################################################

cat >/var/www/html/index.php <<'EOF'
<div id="content" align="center">
<?php
  header("refresh: 120;");
?>
<?php
  // background color (dark blue)
  echo "<body style='background-color:2D3037'>";
  // graphs
  echo "<img src='load_graph.png' alt='Load' />";
  echo "<img src='temp_graph.png' alt='CPUTemp' />";
  echo "<img src='memory_graph.png' alt='Memory' />";
  echo "<img src='hdd_graph.png' alt='Drive' />";
  echo "<img src='network_graph.png' alt='Network' />";
  echo "<img src='balance_graph.png' alt='Balance' />";
  echo "<img src='stakes_graph.png' alt='Stakes' />";
  echo "<img src='inputs_graph.png' alt='Inputs' />";
  echo "<img src='peers_graph.png' alt='Peers' />";
  echo "<img src='total_tx_graph.png' alt='Total TX' />";
  echo "<img src='difficulty_graph.png' alt='Difficulty' />";
EOF

# greater than n seconds, continue
if [[ "$(uptime_daemon)" -gt "1" ]] &>/dev/null; then

  # note: heavy reading, do interval reading with date:time
  if [[ "$(date '+%T' 2>&1 | egrep "[0-9]+:[0-9]+0:[0-9]+" 2>&1)" ]] &>/dev/null; then
    # run graphs script
    printf '%b' "${LOG_DATE:?} Status() rrdtoolStats() Creating graphs.${N0:?}\n" >>"${WALLET_LOG_DIR:?}"/debug.log 2>&1
    bash /usr/local/bin/include/graphs &>/dev/null && clear
  else
    printf '%b' "${LOG_DATE:?} Status() rrdtoolStats() Storing data.${N0:?}\n" >>"${WALLET_LOG_DIR:?}"/debug.log 2>&1
  fi
fi

# END
