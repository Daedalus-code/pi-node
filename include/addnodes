#!/bin/bash

# By Rainman
# V20211512
# 0.0.5.3

source /home/pi/pitrump.conf

# create addnodes file
function addnodes() {
  # save "stable/working" peers into file (addnodes - ipv4 address)
  awk '/:[0-9]+/ && !/]/ {print $2,$3}' "${LOG_DIR:?}"/node_data/getpeerinfo 2>&1 |
    grep -v "Core" 2>&1 | sort -n 2>&1 |
    awk '!a[$0]++' >"${LOG_DIR:?}"/node_data/peers/success 2>&1
  # clean up and use as "manually addnodes"
  awk '/:[0-9]+/ && !/]/ {print $1}' "${LOG_DIR:?}"/node_data/peers/success 2>&1 |
    awk '!a[$0]++' 2>&1 | sort -n >/home/"$(whoami)"/addnodes 2>&1
  # constantly adding (ipv4+manually added)
  awk '/:[0-9]+/ && !/]/ {print $1}' /home/"$(whoami)"/addnodes 2>&1 |
    awk '!a[$0]++' >"${LOG_DIR:?}"/node_data/nodes
  # fill list (addnodes) from nodes
  shuf "${LOG_DIR:?}"/node_data/nodes 2>&1 |
    awk '!a[$0]++' >"${LOG_DIR:?}"/node_data/addnodes 2>&1

  # update addnodes, failed peers, along with ticker price (every half, & hour)
  if [[ "$(date '+%T' 2>&1 | egrep "[0-9]+:30:[0-9]+|[0-9]+:00:[0-9]+" 2>&1)" ]]; then
    rm "${LOG_DIR:?}"/node_data/nodes &>/dev/null
    printf '%b' "${LOG_DATE:?} Status() Update.Nodes() Looking for new peers!${N0:?}\n" >>"${WALLET_LOG_DIR:?}"/debug.log 2>&1
  fi

  # create failed connection list, remove duplicates, sort
  egrep -o " to [a0-z9]+.[a0-z9]+.[a0-z9]+.[a0-z9]+:[0-9]+ failed" "${WALLET_LOG_DIR:?}"/debug.log 2>&1 |
    awk '!a[$0]++' 2>&1 | sort -n 2>&1 | awk '{ print $2 }' >"${LOG_DIR:?}"/node_data/peers/failed 2>&1
}

# cleanup node files
function addnodes_cleanup() {
  # output connected peers
  # disregard with failed connections, without ports
  egrep "192.168.1.*:15110" "${LOG_DIR:?}"/node_data/peers/failed 2>&1 |
    egrep -o "192.168.1.[0-9]+" >>"${LOG_DIR:?}"/node_data/peers/failed 2>&1

  # node_data/addnodes
  cat "${LOG_DIR:?}"/node_data/addnodes 2>&1 | awk '!a[$0]++' 2>&1 |
    # remove with failed and success peers file
    egrep -v -f "${LOG_DIR:?}"/node_data/peers/* >"${LOG_DIR:?}"/node_data/addnodes 2>&1
  # $(whoami)/addnodes
  cat /home/"$(whoami)"/addnodes 2>&1 | awk '!a[$0]++' 2>&1 |
    # remove with failed peers file
    egrep -v -f "${LOG_DIR:?}"/node_data/peers/* >"${LOG_DIR:?}"/node_data/addnodes 2>&1
}

# END
